apiVersion: v1
kind: ConfigMap
data:
  workspace_id: {{ .Values.workspaceId }}
metadata:
  name: {{ template "watson-conv.fullname" . }}-config
  labels:
    app: {{ template "watson-conv.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ template "watson-conv.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    tier: frontend
  name:  {{ template "watson-conv.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ template "watson-conv.name" . }}
      tier: frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ template "watson-conv.name" . }}
        tier: frontend
    spec:
      containers:
      - env:
        - name: WORKSPACE_ID
          valueFrom:
            configMapKeyRef:
              key: workspace_id
              name: {{ template "watson-conv.fullname" . }}-config
        - name: CONVERSATION_SERVICE_CAR
          valueFrom:
            secretKeyRef:
              key: binding
              name: binding-conversation-service-car
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        name: watson-conversation-app
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        ports:
        - containerPort: 3000
          protocol: TCP
          name: http
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ template "watson-conv.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    tier: frontend
  name:  {{ template "watson-conv.fullname" . }}
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: {{ template "watson-conv.name" . }}
    tier: frontend
  sessionAffinity: None
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ template "watson-conv.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    tier: frontend
  name:  {{ template "watson-conv.fullname" . }}-svc
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: {{ template "watson-conv.name" . }}
    tier: frontend
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/rewrite-target: /
  name: {{ template "watson-conv.fullname" . }}
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: {{ template "watson-conv.fullname" . }}-svc
          servicePort: 3000
        path: /conversation